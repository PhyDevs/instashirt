Mutation:
  type: object
  config:
    description: "The Root Mutation type."
    fields:
      # Create a user field
      createUser:
        description: "Create a User."
        access: "@=!isAuthenticated()"
        builder: "Relay::Mutation"
        builderConfig:
          inputType: "createUserInput"
          payloadType: "userPayload"
          mutateAndGetPayload: "@=mutation('create_user', [value])"
      # Update a user field
      updateUser:
        description: "Update a User."
        access: "@=isAuthenticated()"
        builder: "Relay::Mutation"
        builderConfig:
          inputType: "updateUserInput"
          payloadType: "userPayload"
          mutateAndGetPayload: "@=mutation('update_user', [value])"
      # Delete a user field
      deleteUser:
        description: "Delete a User."
        access: "@=isAuthenticated()"
        builder: "Relay::Mutation"
        builderConfig:
          inputType: "deleteUserInput"
          payloadType: "deleteUserPayload"
          mutateAndGetPayload: "@=mutation('delete_user', [value])"

      # Create a single shirt
      createShirt:
        description: "Create a Shirt."
        access: "@=isAuthenticated()"
        builder: "Relay::Mutation"
        builderConfig:
          inputType: "createShirtInput"
          payloadType: "shirtPayload"
          mutateAndGetPayload: "@=mutation('create_shirt', [value])"
      # Update a single shirt
      updateShirt:
        description: "Update a Shirt."
        access: "@=isAuthenticated()"
        builder: "Relay::Mutation"
        builderConfig:
          inputType: "updateShirtInput"
          payloadType: "shirtPayload"
          mutateAndGetPayload: "@=mutation('update_shirt', [value])"
      # Delete s single Shirt
      deleteShirt:
        description: "Delete a Shirt."
        access: "@=isAuthenticated()"
        builder: "Relay::Mutation"
        builderConfig:
          inputType: "deleteShirtInput"
          payloadType: "deleteShirtPayload"
          mutateAndGetPayload: "@=mutation('delete_shirt', [value])"

      # Create a single Comment
      createComment:
        description: "Create a Comment."
        access: "@=isAuthenticated()"
        builder: "Relay::Mutation"
        builderConfig:
          inputType: "createCommentInput"
          payloadType: "commentPayload"
          mutateAndGetPayload: "@=mutation('create_comment', [value])"
      # Update a single Comment
      updateComment:
        description: "Update a Comment."
        access: "@=isAuthenticated()"
        builder: "Relay::Mutation"
        builderConfig:
          inputType: "updateCommentInput"
          payloadType: "commentPayload"
          mutateAndGetPayload: "@=mutation('update_comment', [value])"
      # Delete s single Comment
      deleteComment:
        description: "Delete a Comment."
        access: "@=isAuthenticated()"
        builder: "Relay::Mutation"
        builderConfig:
          inputType: "deleteCommentInput"
          payloadType: "deleteCommentPayload"
          mutateAndGetPayload: "@=mutation('delete_comment', [value])"
      # Authenticate a User
      login:
        description: "Authenticate a User"
        access: "@=!isAuthenticated()"
        builder: "Relay::Mutation"
        builderConfig:
          inputType: "LoginInput"
          payloadType: "userPayload"
          mutateAndGetPayload: "@=mutation('login', [value])"
      # Logout a User
      logout:
        description: "Log out a User"
        type: "logoutPayload"
        access: "@=isAuthenticated()"
        resolve: "@=mutation('logout', [args['input']['clientMutationId']])"
        args:
          input:
            type: "logoutInput"
